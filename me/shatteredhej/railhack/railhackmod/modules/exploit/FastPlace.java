//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\Admin\Desktop\Minecraft-Deobfuscator3000-1.2.2\1.12 stable mappings"!

//Decompiled by Procyon!

package me.shatteredhej.railhack.railhackmod.modules.exploit;

import me.shatteredhej.railhack.railhackmod.module.*;
import me.shatteredhej.railhack.railhackmod.guiscreen.settings.*;
import me.shatteredhej.railhack.railhackmod.category.*;
import net.minecraft.item.*;

public class FastPlace extends Module
{
    Setting fast_place;
    Setting fast_break;
    Setting crystal;
    Setting exp;
    
    public FastPlace() {
        super(Category.Exploit);
        this.fast_place = this.register("Place", "WurstplusFastPlace", false);
        this.fast_break = this.register("Break", "WurstplusFastBreak", false);
        this.crystal = this.register("Crystal", "WurstplusFastCrystal", false);
        this.exp = this.register("EXP", "WurstplusFastExp", true);
        this.name = "FastPlace";
        this.tag = "FastPlace";
        this.description = "use things faster";
    }
    
    public void onUpdate() {
        final Item main = FastPlace.mc.player.getHeldItemMainhand().getItem();
        final Item off = FastPlace.mc.player.getHeldItemOffhand().getItem();
        final boolean main_exp = main instanceof ItemExpBottle;
        final boolean off_exp = off instanceof ItemExpBottle;
        final boolean main_cry = main instanceof ItemEndCrystal;
        final boolean off_cry = off instanceof ItemEndCrystal;
        if ((main_exp | off_exp) && this.exp.getValue(true)) {
            FastPlace.mc.rightClickDelayTimer = 0;
        }
        if ((main_cry | off_cry) && this.crystal.getValue(true)) {
            FastPlace.mc.rightClickDelayTimer = 0;
        }
        if (!(main_exp | off_exp | main_cry | off_cry) && this.fast_place.getValue(true)) {
            FastPlace.mc.rightClickDelayTimer = 0;
        }
        if (this.fast_break.getValue(true)) {
            FastPlace.mc.playerController.blockHitDelay = 0;
        }
    }
}
